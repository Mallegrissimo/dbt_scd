{%- macro hash(columns, alias=None) -%}
    {%- set columns = [columns] if columns is string else columns|sort -%}
    {%- set hash_algo = var('dbt_scd__hash_algo',  'SHA2_BINARY') -%}
    {%- set string_concat_delimeter = config.get('dbt_scd__string_concat_delimeter', '||') -%}
    {%- set null_value_string = config.get('dbt_scd__null_value_string', 'NVL') -%}
    {%- set hash_size = 256 -%}
    {%- set column_tmpl = "IFNULL(NULLIF(UPPER(TRIM(CAST([EXPRESSION] AS VARCHAR))), ''), '{}')".format(null_value_string) -%}

    {{- "CAST({}(CONCAT_WS('{}'".format(hash_algo, string_concat_delimeter)-}}

    {%- for column in columns -%}
        {{- '\n    , '~ column_tmpl | replace('[EXPRESSION]', quoted(column)) -}}
    {%- endfor -%}
    {{- '\n)) AS BINARY({}))'.format(hash_size) ~ ' AS {}'.format(quoted(alias) if alias else '' ) -}}
{%- endmacro -%}


{%- macro quoted(args, col_prefix='') -%}
  {%- set items = [args] if args is string  else args  -%}
  {%- set quote_str ='"' -%}
  {%- for item in items -%}
    {#%do log('item: ' ~ item, 1) %#}
    {{- (col_prefix~'.' if col_prefix else '') ~ quote_str ~ item|upper ~ quote_str -}}
    {{- ',' if not loop.last  -}}
  {%- endfor -%}
{%- endmacro -%}

{%- macro scd_package_source_info() %}
-- Generated by dbt_scd v0.1 by Mallegrissimo@github
{%- endmacro -%}